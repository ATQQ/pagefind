# Based on: https://github.com/ClementTsang/bottom/blob/master/.github/workflows/deployment.yml

name: Build WIPs

on:
  push:
    branches: [build_wips]
  pull_request:
    branches: [build_wips]

env:
  CARGO_TERM_COLOR: always
  HUMANE_VERSION: "0.6.0"
  WASM_PACK_VERSION: "v0.10.3"

jobs:
  test-and-build:
    name: Build Binaries
    runs-on: ${{matrix.os}}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - build: windows
            os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
            cross: false
            run_tests: true
          - build: linux
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-musl
            cross: false
            run_tests: true
          - build: linux
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-musl
            cross: false
            run_tests: true
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
            cross: false
            run_tests: true
          - build: macos-m1
            os: macos-latest
            rust: stable
            target: aarch64-apple-darwin
            cross: false
            run_tests: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.rustup
            target
          key: ${{ runner.os }}-${{ matrix.rust }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      # From https://github.com/Emoun/duplicate/blob/master/.github/workflows/rust.yml
      - name: Get Version
        run: echo GIT_VERSION="0.0.0" >> $GITHUB_ENV

      # - name: Verify Changelog
      #   run: |
      #     node ./.backstage/changelog.cjs

      - name: Install Linker
        if: matrix.cross
        run: |
          sudo apt update
          sudo apt install ${{ matrix.linker }}
      - name: Install Tooling
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update -y
          sudo apt install -y musl-tools musl-dev clang gcc-aarch64-linux-gnu         
          echo "TARGET_CC=clang" >> $GITHUB_ENV
          echo "CFLAGS_aarch64_unknown_linux_musl=--sysroot=/usr/aarch64-linux-gnu" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER=/usr/aarch64-linux-gnu/bin/ld" >> $GITHUB_ENV
      - name: Install Rust
        run: |
          rustup install ${{ matrix.rust }}
          rustup target add ${{ matrix.target }}
          rustup show
      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: "latest"

      - name: Install humane
        if: matrix.run_tests == true
        uses: supplypike/setup-bin@v1
        with:
          uri: "https://github.com/CloudCannon/humane/releases/download/v${{env.HUMANE_VERSION}}/humane-v${{env.HUMANE_VERSION}}-${{matrix.target}}.tar.gz"
          name: "humane"
          version: ${{env.HUMANE_VERSION}}

      - name: Prepare Git
        run: |
          git config user.email "github@github.com"
          git config user.name "Github Actions"
          git checkout -b main
          # Use throw-away branch so we don't push the changes to origin
          git checkout -b deploy_branch
      # - name: Prepare Crates
      #   run: |
      #     # Update cargo version, 
      #     node ./.backstage/version.cjs
      #     git add ./pagefind/Cargo.toml
      #     git add ./pagefind_web/Cargo.toml
      #     git add ./pagefind_ui/package.json
      #     # Commit changes so cargo doesn't complain about dirty repo
      #     git commit -m "Deploy changes."

      - name: Build WASM
        working-directory: ./pagefind_web
        run: ./local_build.sh

      - name: Build UI
        working-directory: ./pagefind_ui
        run: npm i && npm run build

      - name: Test Web
        if: matrix.run_tests == true
        working-directory: ./pagefind_web
        run: cargo test --release

      - name: Build
        working-directory: ./pagefind
        run: cargo build --release --target ${{ matrix.target }} --features extended

      - name: Test Lib
        if: matrix.run_tests == true
        working-directory: ./pagefind
        run: cargo test --release --target ${{ matrix.target }} --features extended

      - name: Test CLI
        if: matrix.run_tests == true
        working-directory: ./pagefind
        run: TEST_BINARY=../target/${{ matrix.target }}/release/pagefind humane

      - name: Move extended binary aside
        run: |
          cp target/${{ matrix.target }}/release/pagefind target/${{ matrix.target }}/release/pagefind_extended

      - name: Build Non-Extended
        working-directory: ./pagefind
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create Standard Release
        run: |
          EXEC_NAME="pagefind"
          ASSET_PATH="$EXEC_NAME-$GIT_VERSION-${{ matrix.target }}.tar.gz"
          CHECKSUM_PATH="$ASSET_PATH.sha256"

          if [ "$RUNNER_OS" == "Windows" ]; then
            EXEC_NAME="pagefind.exe"
          fi

          tar czf $ASSET_PATH -C target/${{ matrix.target }}/release $EXEC_NAME

          case $RUNNER_OS in
              Windows)
                  sha256sum $ASSET_PATH > $CHECKSUM_PATH
                  ;;
              Linux)
                  sha256sum $ASSET_PATH > $CHECKSUM_PATH
                  ;;
              macOS)
                  shasum -a 256 $ASSET_PATH > $CHECKSUM_PATH
                  ;;
          esac

          if [ "$RUNNER_OS" == "Windows" ]; then
              ASSET_PATH=$(echo "$ASSET_PATH" | sed -e 's/^\///' -e 's/\//\\/g' -e 's/^./\0:/')
              CHECKSUM_PATH=$(echo "$CHECKSUM_PATH" | sed -e 's/^\///' -e 's/\//\\/g' -e 's/^./\0:/')
          fi

          echo "ASSET_PATH=$ASSET_PATH" >> $GITHUB_ENV
          echo "CHECKSUM_PATH=$CHECKSUM_PATH" >> $GITHUB_ENV

      - name: Create Extended Release
        run: |
          EXEC_NAME="pagefind_extended"
          ASSET_PATH="$EXEC_NAME-$GIT_VERSION-${{ matrix.target }}.tar.gz"
          CHECKSUM_PATH="$ASSET_PATH.sha256"

          if [ "$RUNNER_OS" == "Windows" ]; then
            EXEC_NAME="pagefind_extended.exe"
          fi

          tar czf $ASSET_PATH -C target/${{ matrix.target }}/release $EXEC_NAME

          case $RUNNER_OS in
              Windows)
                  sha256sum $ASSET_PATH > $CHECKSUM_PATH
                  ;;
              Linux)
                  sha256sum $ASSET_PATH > $CHECKSUM_PATH
                  ;;
              macOS)
                  shasum -a 256 $ASSET_PATH > $CHECKSUM_PATH
                  ;;
          esac

          if [ "$RUNNER_OS" == "Windows" ]; then
              ASSET_PATH=$(echo "$ASSET_PATH" | sed -e 's/^\///' -e 's/\//\\/g' -e 's/^./\0:/')
              CHECKSUM_PATH=$(echo "$CHECKSUM_PATH" | sed -e 's/^\///' -e 's/\//\\/g' -e 's/^./\0:/')
          fi

          echo "EXTENDED_ASSET_PATH=$ASSET_PATH" >> $GITHUB_ENV
          echo "EXTENDED_CHECKSUM_PATH=$CHECKSUM_PATH" >> $GITHUB_ENV

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: |
            ${{ env.ASSET_PATH }}
            ${{ env.CHECKSUM_PATH }}
            ${{ env.EXTENDED_ASSET_PATH }}
            ${{ env.EXTENDED_CHECKSUM_PATH }}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-checksums
          path: |
            ${{ env.CHECKSUM_PATH }}
            ${{ env.EXTENDED_CHECKSUM_PATH }}
